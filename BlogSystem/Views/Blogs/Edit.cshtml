@model BlogSystem.Domain.ViewModels.BlogWithCommentsViewModel

@{
    ViewData["Title"] = "Edit";
}
<h3 class="text-warning">Edit Blog</h3>
<hr class="w-25" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.Blog.Id" />
            <div class="form-group">
                <label asp-for="@Model.Blog.Title" class="control-label required"></label>
                <input asp-for="@Model.Blog.Title" class="form-control" />
                <span asp-validation-for="@Model.Blog.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Blog.Content" class="control-label required"></label>
                <input asp-for="@Model.Blog.Content" class="form-control" />
                <span asp-validation-for="@Model.Blog.Content" class="text-danger"></span>
            </div>
            <h4 class="mt-3">Comments :</h4>
            @for (var i = 0; i < Model.Comments.Count; i++)
            {
                <div class="form-group">
                    <input type="hidden" asp-for="@Model.Comments[i].Id" />
                    <label asp-for="@Model.Comments[i].Content" class="contro-label required">Comment</label>
                    <input asp-for="@Model.Comments[i].Content" class="form-control" />
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-sm mt-3 btn-primary" />
                <a asp-action="Index" class="btn btn-sm btn-success mt-3 ms-2">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
